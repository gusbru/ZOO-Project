# create k8s configmap for the deployment process
apiVersion: v1
kind: ConfigMap
metadata:
  name: deployment-configmap
data:
  DeploymentProcess.py: |+
    #

    import zoo
    import json

    def DeployProcess(conf, inputs, outputs):
        try:
            print(f"conf = {json.dumps(conf, indent=4)}", file=sys.stderr)
            print(f"inputs = {json.dumps(inputs, indent=4)}", file=sys.stderr)
            print(f"outputs = {json.dumps(outputs, indent=4)}", file=sys.stderr)
            
            response_json = {
                "message": f"Service  successfully deployed.",
                "service": "deploy_process.service_configuration.identifier",
                "status": "success"
            }
            outputs["Result"]["value"] = json.dumps(response_json)
            return zoo.SERVICE_DEPLOYED
        except Exception as e:
            print("Exception in Python service",file=sys.stderr)
            print(e,file=sys.stderr)
            conf["lenv"]["message"]=str(e)
            return zoo.SERVICE_FAILED


